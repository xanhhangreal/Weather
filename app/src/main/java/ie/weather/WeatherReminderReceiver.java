package ie.weather;

import android.app.AlarmManager;
import android.app.NotificationChannel;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Build;
import android.os.PowerManager;
import android.util.Log;

import androidx.core.app.NotificationCompat;

import java.util.Calendar;

public class WeatherReminderReceiver extends BroadcastReceiver {

    @Override
    public void onReceive(Context context, Intent intent) {
        Log.d("Reminder", "Receiver ch·∫°y!");
        // Ki·ªÉm tra ti·∫øt ki·ªám pin
        PowerManager powerManager = (PowerManager) context.getSystemService(Context.POWER_SERVICE);
        if (powerManager != null && powerManager.isPowerSaveMode()) {
            Log.d("ReminderReceiver", "‚ö†Ô∏è ƒêang b·∫≠t ti·∫øt ki·ªám pin - b·ªè qua c·∫≠p nh·∫≠t widget");
            return;
        }
        // üîπ L·∫•y d·ªØ li·ªáu th·ªùi ti·∫øt t·ª´ SharedPreferences
        SharedPreferences prefs = context.getSharedPreferences("weather_prefs", Context.MODE_PRIVATE);
        String tempStr = prefs.getString("temp", "0").replace("¬∞C", "").trim();
        String condition = prefs.getString("condition", "Kh√¥ng r√µ");

        float temp = 0f;
        try {
            temp = Float.parseFloat(tempStr);
        } catch (NumberFormatException e) {
            Log.e("Reminder", "L·ªói chuy·ªÉn ƒë·ªïi nhi·ªát ƒë·ªô: " + tempStr);
        }

        // üîπ T·∫°o n·ªôi dung th√¥ng b√°o theo ƒëi·ªÅu ki·ªán
        String message = "üå§Ô∏è Ch√∫c b·∫°n m·ªôt ng√†y t·ªët l√†nh!";
        if (condition.toLowerCase().contains("rain")) {
            message = "‚òî H√¥m nay c√≥ m∆∞a. ƒê·ª´ng qu√™n mang √¥!";
        } else if (temp < 18) {
            message = "ü•∂ Tr·ªùi l·∫°nh ƒë·∫•y. Nh·ªõ m·∫∑c ·∫•m nha!";
        } else if (temp > 33) {
            message = "üî• N√≥ng th·∫ø n√†y nh·ªõ u·ªëng nhi·ªÅu n∆∞·ªõc nh√©!";
        }

        // üîπ T·∫°o th√¥ng b√°o
        String channelId = "weather_channel";
        NotificationManager manager = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
            NotificationChannel channel = new NotificationChannel(
                    channelId,
                    "Th√¥ng b√°o th·ªùi ti·∫øt",
                    NotificationManager.IMPORTANCE_HIGH
            );
            manager.createNotificationChannel(channel);
        }

        NotificationCompat.Builder builder = new NotificationCompat.Builder(context, channelId)
                .setSmallIcon(android.R.drawable.ic_menu_compass)  // ho·∫∑c ic_weather_clear
                .setContentTitle("‚è∞ Nh·∫Øc nh·ªü th·ªùi ti·∫øt")
                .setContentText(message)
                .setAutoCancel(true)
                .setPriority(NotificationCompat.PRIORITY_HIGH);

        manager.notify(1002, builder.build());

        // üîÅ ƒê·∫∑t l·∫°i b√°o th·ª©c cho ng√†y h√¥m sau l√∫c 7h
//        AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);
//        Intent newIntent = new Intent(context, WeatherReminderReceiver.class);
//        PendingIntent pendingIntent = PendingIntent.getBroadcast(context, 0, newIntent, PendingIntent.FLAG_IMMUTABLE);
//
//        Calendar next = Calendar.getInstance();
//        next.add(Calendar.DAY_OF_YEAR, 1);
//        next.set(Calendar.HOUR_OF_DAY, 7);
//        next.set(Calendar.MINUTE, 0);
//        next.set(Calendar.SECOND, 0);
//
//        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.S) {
//            if (alarmManager.canScheduleExactAlarms()) {
//                alarmManager.setExactAndAllowWhileIdle(AlarmManager.RTC_WAKEUP, next.getTimeInMillis(), pendingIntent);
//            }
//        } else {
//            alarmManager.setExactAndAllowWhileIdle(AlarmManager.RTC_WAKEUP, next.getTimeInMillis(), pendingIntent);
//        }
//
//        Log.d("Reminder", "ƒê√£ l√™n l·ªãch l·∫°i cho: " + next.getTime());
        AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);
        Intent newIntent = new Intent(context, WeatherReminderReceiver.class);
        PendingIntent pendingIntent = PendingIntent.getBroadcast(context, 0, newIntent, PendingIntent.FLAG_IMMUTABLE);

        Calendar next = Calendar.getInstance();
        next.add(Calendar.SECOND, 10); // üí• L·∫∑p l·∫°i sau 10s

        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.S) {
            if (alarmManager.canScheduleExactAlarms()) {
                alarmManager.setExactAndAllowWhileIdle(AlarmManager.RTC_WAKEUP, next.getTimeInMillis(), pendingIntent);
            }
        } else {
            alarmManager.setExactAndAllowWhileIdle(AlarmManager.RTC_WAKEUP, next.getTimeInMillis(), pendingIntent);
        }

        Log.d("Reminder", "‚è±Ô∏è L·∫∑p l·∫°i sau 10s t·∫°i: " + next.getTime());
    }
    public static void setAlarmIfNeeded(Context context) {
        PowerManager powerManager = (PowerManager) context.getSystemService(Context.POWER_SERVICE);
        if (powerManager != null && powerManager.isPowerSaveMode()) {
            Log.d("ReminderReceiver", "üîã Battery Saver ƒëang b·∫≠t - kh√¥ng ƒë·∫∑t l·∫°i Alarm");
            return;
        }

        AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);
        Intent intent = new Intent(context, WeatherReminderReceiver.class);
        PendingIntent pendingIntent = PendingIntent.getBroadcast(context, 0, intent, PendingIntent.FLAG_IMMUTABLE);

        long intervalMillis = 60 * 60 * 1000L; // v√≠ d·ª•: 1 gi·ªù
        long triggerAt = System.currentTimeMillis() + intervalMillis;

        if (alarmManager != null) {
            alarmManager.setInexactRepeating(
                    AlarmManager.RTC_WAKEUP,
                    triggerAt,
                    intervalMillis,
                    pendingIntent
            );
            Log.d("ReminderReceiver", "‚úÖ ƒê√£ ƒë·∫∑t l·∫°i Alarm c·∫≠p nh·∫≠t widget m·ªói 1 gi·ªù");
        }
    }
}
